name: Generate a build and push to another branch

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and Push
    steps:
      - name: git-checkout
        uses: actions/checkout@v2

      - name: Install all dependencies
        run: npm install

      - name: Build
        run: npm run build
        env:
          NODEMAILER_PASSWORD: ${{ secrets.NODEMAILER_PASSWORD }}
          NODEMAILER_EMAIL: ${{ secrets.NODEMAILER_EMAIL }}
          NEXT_PUBLIC_SANITY_PROJECT_ID: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_ID }}
          NEXT_PUBLIC_SANITY_PROJECT_DATASET: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_DATASET }}
          NEXT_PUBLIC_SANITY_PROJECT_API_VERSION: ${{ secrets.NEXT_PUBLIC_SANITY_PROJECT_API_VERSION }}
          NEXT_PUBLIC_RECAPTCHA_SITE_KEY: ${{ secrets.NEXT_PUBLIC_RECAPTCHA_SITE_KEY }}
          RECAPTCHA_SECRET_KEY: ${{ secrets.RECAPTCHA_SECRET_KEY }}
          NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: production

      - name: Checkout build branch
        run: |
          git fetch origin build || git checkout --orphan build
          git reset --hard
          git clean -fdx
          git checkout build || git checkout --orphan build

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: ./build

      - name: Configure Git
        run: |
          git config --global user.email "utinfrancis.dev@gmail.com"
          git config --global user.name "utin-francis-peter"

      - name: Push changes to build branch
        run: |
          git add build/
          git commit -m "build: added build artifacts"
          git push origin build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Vercel
        run: vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }} # Optional, if you have an organization ID
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }} # Optional, if you have a project ID
